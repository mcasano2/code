-- VHDL Entity ece411.Stage_ex.interface
--
-- Created:
--          by - mcasano2.ews (gelib-057-26.ews.illinois.edu)
--          at - 00:17:13 04/11/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Stage_ex IS
   PORT( 
      CLK              : IN     STD_LOGIC;
      RESET_L          : IN     STD_LOGIC;
      ex_ADJ6_in       : IN     LC3B_WORD;
      ex_PCadj_in      : IN     LC3B_WORD;
      ex_REGaNum_in    : IN     LC3B_REG;
      ex_REGa_in       : IN     LC3B_WORD;
      ex_REGbNum_in    : IN     LC3B_REG;
      ex_REGb_in       : IN     LC3B_WORD;
      ex_SEXT5_in      : IN     LC3B_WORD;
      ex_SEXT6_in      : IN     LC3B_WORD;
      ex_controls_in   : IN     CONTROL_WORD;
      mem_ALU_in       : IN     LC3B_WORD;
      mem_DR_in        : IN     LC3B_REG;
      mem_RegWrite_out : IN     STD_LOGIC;
      wb_DR            : IN     LC3B_REG;
      wb_RegIn         : IN     LC3B_WORD;
      wb_regWrite_Out  : IN     std_logic;
      ex_ALU_out       : OUT    LC3B_WORD;
      ex_MemRead_out   : OUT    std_logic;
      ex_nzp_out       : OUT    LC3B_CC;
      ex_regb_out      : OUT    LC3b_word
   );

-- Declarations

END Stage_ex ;

--
-- VHDL Architecture ece411.Stage_ex.struct
--
-- Created:
--          by - mcasano2.ews (gelib-057-26.ews.illinois.edu)
--          at - 00:17:13 04/11/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF Stage_ex IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL ALUMUXSel      : LC3B_4MUXSEL;
   SIGNAL ALUMUxOUT      : lc3b_word;
   SIGNAL F              : LC3b_word;
   SIGNAL ForwardAMuxSel : LC3B_4MUX_SEL;
   SIGNAL ForwardBMuxSel : LC3B_4MUX_SEL;
   SIGNAL GenCCMuxSel    : std_logic;
   SIGNAL GenCCout       : LC3b_cc;
   SIGNAL LoadNZP        : std_logic;
   SIGNAL RegAForward    : lc3b_word;
   SIGNAL RegBForward    : lc3b_word;
   SIGNAL aluop          : LC3B_ALUOP;
   SIGNAL n              : std_logic;
   SIGNAL p              : std_logic;
   SIGNAL z              : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL ex_ALU_out_internal : LC3B_WORD;


   -- Component Declarations
   COMPONENT ALU
   PORT (
      ALUMuxout : IN     LC3b_word;
      ALUop     : IN     LC3b_aluop;
      RFAout    : IN     LC3b_word;
      ALUout    : OUT    LC3b_word
   );
   END COMPONENT;
   COMPONENT EX_StripControls
   PORT (
      ex_controls_in : IN     CONTROL_WORD;
      ALUMUXSel      : OUT    LC3B_4MUXSEL;
      GenCCMuxSel    : OUT    std_logic;
      LoadNZP        : OUT    std_logic;
      aluop          : OUT    LC3B_ALUOP;
      ex_MemRead_out : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT Forwarding_Unit
   PORT (
      CLK              : IN     STD_LOGIC ;
      ex_REGaNum_in    : IN     LC3B_REG ;
      ex_REGbNum_in    : IN     LC3B_REG ;
      mem_DR_in        : IN     LC3B_REG ;
      mem_RegWrite_out : IN     STD_LOGIC ;
      wb_DR            : IN     LC3B_REG ;
      wb_regWrite_Out  : IN     std_logic ;
      ForwardAMuxSel   : OUT    LC3B_4MUX_SEL ;
      ForwardBMuxSel   : OUT    LC3B_4MUX_SEL 
   );
   END COMPONENT;
   COMPONENT GenCC
   PORT (
      RFMuxout : IN     LC3b_word;
      GenCCout : OUT    LC3b_cc
   );
   END COMPONENT;
   COMPONENT NZP
   PORT (
      GenCCout : IN     LC3b_cc;
      LoadNZP  : IN     std_logic;
      RESET_L  : IN     std_logic;
      n        : OUT    std_logic;
      p        : OUT    std_logic;
      z        : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT NZP_COMB
   PORT (
      n          : IN     std_logic;
      p          : IN     std_logic;
      z          : IN     std_logic;
      ex_nzp_out : OUT    LC3B_CC
   );
   END COMPONENT;
   COMPONENT WordMux2
   PORT (
      A   : IN     LC3b_word ;
      B   : IN     LC3b_word ;
      Sel : IN     std_logic ;
      F   : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT WordMux4
   PORT (
      A   : IN     lc3b_word ;
      B   : IN     lc3b_word ;
      C   : IN     lc3b_word ;
      D   : IN     lc3b_word ;
      Sel : IN     lc3b_4mux_sel ;
      F   : OUT    lc3b_word 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ALU USE ENTITY ece411.ALU;
   FOR ALL : EX_StripControls USE ENTITY ece411.EX_StripControls;
   FOR ALL : Forwarding_Unit USE ENTITY ece411.Forwarding_Unit;
   FOR ALL : GenCC USE ENTITY ece411.GenCC;
   FOR ALL : NZP USE ENTITY ece411.NZP;
   FOR ALL : NZP_COMB USE ENTITY ece411.NZP_COMB;
   FOR ALL : WordMux2 USE ENTITY ece411.WordMux2;
   FOR ALL : WordMux4 USE ENTITY ece411.WordMux4;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   ex_regB_out <= RegBForward;                                      


   -- Instance port mappings.
   aALU : ALU
      PORT MAP (
         ALUMuxout => ALUMUxOUT,
         ALUop     => aluop,
         RFAout    => F,
         ALUout    => ex_ALU_out_internal
      );
   EX_StripCntrl : EX_StripControls
      PORT MAP (
         ex_controls_in => ex_controls_in,
         aluop          => aluop,
         ALUMUXSel      => ALUMUXSel,
         LoadNZP        => LoadNZP,
         GenCCMuxSel    => GenCCMuxSel,
         ex_MemRead_out => ex_MemRead_out
      );
   ForwardUnit : Forwarding_Unit
      PORT MAP (
         CLK              => CLK,
         ex_REGaNum_in    => ex_REGaNum_in,
         ex_REGbNum_in    => ex_REGbNum_in,
         mem_DR_in        => mem_DR_in,
         mem_RegWrite_out => mem_RegWrite_out,
         wb_DR            => wb_DR,
         wb_regWrite_Out  => wb_regWrite_Out,
         ForwardAMuxSel   => ForwardAMuxSel,
         ForwardBMuxSel   => ForwardBMuxSel
      );
   aGenCC : GenCC
      PORT MAP (
         RFMuxout => ex_ALU_out_internal,
         GenCCout => GenCCout
      );
   U_3 : NZP
      PORT MAP (
         GenCCout => GenCCout,
         LoadNZP  => LoadNZP,
         RESET_L  => RESET_L,
         n        => n,
         p        => p,
         z        => z
      );
   nzp_combine : NZP_COMB
      PORT MAP (
         n          => n,
         p          => p,
         z          => z,
         ex_nzp_out => ex_nzp_out
      );
   GenCCMux : WordMux2
      PORT MAP (
         A   => RegAForward,
         B   => ex_PCadj_in,
         Sel => GenCCMuxSel,
         F   => F
      );
   ALUMUX : WordMux4
      PORT MAP (
         A   => RegBForward,
         B   => ex_ADJ6_in,
         C   => ex_SEXT5_in,
         D   => ex_SEXT6_in,
         Sel => ALUMUXSel,
         F   => ALUMUxOUT
      );
   ForwardAMux : WordMux4
      PORT MAP (
         A   => ex_REGa_in,
         B   => wb_RegIn,
         C   => mem_ALU_in,
         D   => mem_ALU_in,
         Sel => ForwardAMuxSel,
         F   => RegAForward
      );
   ForwardBMux : WordMux4
      PORT MAP (
         A   => ex_REGb_in,
         B   => wb_RegIn,
         C   => mem_ALU_in,
         D   => mem_ALU_in,
         Sel => ForwardBMuxSel,
         F   => RegBForward
      );

   -- Implicit buffered output assignments
   ex_ALU_out <= ex_ALU_out_internal;

END struct;
